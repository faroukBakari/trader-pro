#!/bin/bash
# OpenAPI Client Generator
# Generates TypeScript REST client from backend OpenAPI specification.
#
# Usage:
#   ./scripts/generate-openapi-client.sh
#   TRADER_API_BASE_PATH="/api" ./scripts/generate-openapi-client.sh

set -e

# Configuration
OUTPUT_DIR="./src/clients/trader-client-generated"
BACKEND_DIR="../backend"
OPENAPI_SPEC="$BACKEND_DIR/openapi.json"
CLIENT_PACKAGE_NAME="@trading-api/client"
BASE_PATH="${TRADER_API_BASE_PATH:-}"

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}🚀 OpenAPI Client Generator${NC}"
echo ""

# Verify OpenAPI spec exists
if [ ! -f "$OPENAPI_SPEC" ]; then
    echo -e "${RED}❌ OpenAPI specification not found at: $OPENAPI_SPEC${NC}"
    echo -e "${YELLOW}💡 Generate it first: cd ../backend && make export-openapi-spec${NC}"
    exit 1
fi

# Clean up previous client
echo -e "${BLUE}🧹 Cleaning previous OpenAPI client...${NC}"
rm -rf "$OUTPUT_DIR"
mkdir -p "$OUTPUT_DIR"
echo -e "${GREEN}✅ Cleanup complete${NC}"
echo ""

# Generate TypeScript client
echo -e "${BLUE}🔧 Generating TypeScript REST client...${NC}"

# Prepare generator command
generator_cmd="npx @openapitools/openapi-generator-cli generate \
    -i \"$OPENAPI_SPEC\" \
    -g typescript-axios \
    -o \"$OUTPUT_DIR\" \
    -c \"./openapi-generator-config.json\" \
    --server-variables=host=,basePath="

# Add basePath override if specified
if [ -n "$BASE_PATH" ]; then
    echo -e "${BLUE}🔧 Using custom basePath: $BASE_PATH${NC}"
    generator_cmd="$generator_cmd --additional-properties=basePath=\"$BASE_PATH\""
fi

# Generate client
if eval "$generator_cmd" > /dev/null 2>&1; then
    echo -e "${GREEN}✅ Client generation successful${NC}"

    # Create index file for easy imports
    cat > "$OUTPUT_DIR/index.ts" << 'EOF'
// Auto-generated API client exports
// This file is automatically generated. Do not edit manually.

// API Classes
export * from './api'

// Models/Types
export * from './models'

// Base configuration
export * from './base'
export * from './common'
export * from './configuration'

// Re-export commonly used types
export type {
  AxiosResponse,
  AxiosError,
  AxiosRequestConfig
} from 'axios'
EOF

    echo ""
    echo -e "${GREEN}🎉 Success! Generated REST client from OpenAPI specification${NC}"
    echo -e "${GREEN}📁 Output: $OUTPUT_DIR${NC}"
    if [ -n "$BASE_PATH" ]; then
        echo -e "${GREEN}   - Using basePath: $BASE_PATH${NC}"
    fi
    echo ""
    exit 0
else
    echo -e "${RED}❌ Client generation failed${NC}"
    exit 1
fi
